import telebot
from telebot import types
import sqlite3
import os

TOKEN = os.getenv("TOKEN")
ADMIN_IDS = [int(os.getenv("ADMIN_ID")), int(os.getenv("ADMIN_ID_2"))]  # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ ID –∫ int
admin_clients = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∫ –∞–¥–º–∏–Ω—É

bot = telebot.TeleBot(TOKEN)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect('clients.db', check_same_thread=False)
cursor = conn.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
cursor.execute("""
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    username TEXT,
    full_name TEXT,
    likes TEXT,
    dislikes TEXT,
    suggestions TEXT,
    gender TEXT,
    age_group TEXT,
    visit_frequency TEXT
)
""")
conn.commit()

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    username = message.from_user.username
    full_name = f"{message.from_user.first_name} {message.from_user.last_name or ''}".strip()
    
    cursor.execute("SELECT * FROM users WHERE user_id = ?", (user_id,))
    user = cursor.fetchone()
    
    if user:
        bot.reply_to(message, "–í—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –∞–Ω–∫–µ—Ç—É. –°–ø–∞—Å–∏–±–æ!")
    else:
        cursor.execute("INSERT OR IGNORE INTO users (user_id, username, full_name) VALUES (?, ?, ?)", (user_id, username, full_name))
        conn.commit()

        assigned_admin = ADMIN_IDS[len(admin_clients) % len(ADMIN_IDS)]
        admin_clients[user_id] = assigned_admin  

        bot.send_message(
            message.chat.id, 
            "–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –º–µ–Ω—è –∑–æ–≤—É—Ç –î–∞–≤–∏–¥üëã —è –≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ç–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤ '–î—ã–º'üí®\n"
            "–†–∞–¥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—Éüòä\n\n"
            "–Ø —Å–æ–∑–¥–∞–ª —ç—Ç–æ–≥–æ –±–æ—Ç–∞, —á—Ç–æ–±—ã –¥–∞—Ç—å —Å–≤–æ–∏–º –≥–æ—Å—Ç—è–º —Å–∞–º—ã–π –ª—É—á—à–∏–π —Å–µ—Ä–≤–∏—Å –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µüòç\n\n"
            "–í—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –º—ã —Å—Ç–∞–ª–∏ –ª—É—á—à–µ –¥–ª—è –≤–∞—Å?",
            reply_markup=generate_yes_no_keyboard()
        )
        bot.register_next_step_handler(message, ask_survey_consent)

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –î–∞/–ù–µ—Ç
def generate_yes_no_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("–î–∞", "–ù–µ—Ç")
    return markup

# –í–æ–ø—Ä–æ—Å –æ–± —É—á–∞—Å—Ç–∏–∏ –≤ –æ–ø—Ä–æ—Å–µ
def ask_survey_consent(message):
    bot.send_message(
        message.chat.id, 
        "–û—Ç–ª–∏—á–Ω–æ‚ú®\n–¢—É—Ç —è –±—É–¥—É –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –∏ –ø–æ–¥–∞—Ä–∫–∏ üéÅ\n\n"
        "–ù–æ —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ, –º—ã —Ö–æ—Ç–∏–º —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã.\n\n"
        "–°–º–æ–∂–µ—Ç–µ –Ω–∞–º –ø–æ–º–æ—á—å, –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ 3 –≤–æ–ø—Ä–æ—Å–∞?", 
        reply_markup=generate_yes_no_keyboard()
    )
    bot.register_next_step_handler(message, ask_likes)

# –í–æ–ø—Ä–æ—Å –æ —Ç–æ–º, —á—Ç–æ —Ü–µ–Ω—è—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ
def ask_likes(message):
    bot.send_message(message.chat.id, "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–º–æ—â—åü§ù\n–ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ 2 –≤–µ—â–∏ –≤ –Ω–∞—à–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö –≤—ã —Ü–µ–Ω–∏—Ç–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?")
    bot.register_next_step_handler(message, save_likes)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
def save_likes(message):
    cursor.execute("UPDATE users SET likes = ? WHERE user_id = ?", (message.text, message.from_user.id))
    conn.commit()
    ask_dislikes(message)

def ask_dislikes(message):
    bot.send_message(message.chat.id, "–•–æ—Ä–æ—à–æüòä\n–ò –µ—â–µ –ø–∞—Ä—É –≤–µ—â–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è?")
    bot.register_next_step_handler(message, save_dislikes)

def save_dislikes(message):
    cursor.execute("UPDATE users SET dislikes = ? WHERE user_id = ?", (message.text, message.from_user.id))
    conn.commit()
    ask_suggestions(message)

def ask_suggestions(message):
    bot.send_message(message.chat.id, "–ß—Ç–æ –±—ã –≤—ã –∏–∑–º–µ–Ω–∏–ª–∏, –±—É–¥—É—á–∏ –Ω–∞ –º–æ–µ–º –º–µ—Å—Ç–µ, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –ª—É—á—à–µ?")
    bot.register_next_step_handler(message, save_suggestions)

def save_suggestions(message):
    cursor.execute("UPDATE users SET suggestions = ? WHERE user_id = ?", (message.text, message.from_user.id))
    conn.commit()
    ask_gender(message)

# –í–æ–ø—Ä–æ—Å –æ –ø–æ–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def ask_gender(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π")
    bot.send_message(message.chat.id, "–ö–∞–∫–æ–π —É –≤–∞—Å –ø–æ–ª?", reply_markup=markup)
    bot.register_next_step_handler(message, save_gender)

def save_gender(message):
    cursor.execute("UPDATE users SET gender = ? WHERE user_id = ?", (message.text, message.from_user.id))
    conn.commit()
    ask_age_group(message)

def ask_age_group(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("18-25", "26-35", "36-45", "46+")
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –≤–æ–∑—Ä–∞—Å—Ç–Ω—É—é –≥—Ä—É–ø–ø—É:", reply_markup=markup)
    bot.register_next_step_handler(message, save_age_group)

def save_age_group(message):
    cursor.execute("UPDATE users SET age_group = ? WHERE user_id = ?", (message.text, message.from_user.id))
    conn.commit()
    ask_visit_frequency(message)

def ask_visit_frequency(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("–†–∞–∑ –≤ –Ω–µ–¥–µ–ª—é", "–†–∞–∑ –≤ –º–µ—Å—è—Ü", "–†–∞–∑ –≤ –ø–æ–ª–≥–æ–¥–∞", "–†–µ–¥–∫–æ")
    bot.send_message(message.chat.id, "–ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –ø–æ—Å–µ—â–∞–µ—Ç–µ –Ω–∞—à–∏ –º–∞–≥–∞–∑–∏–Ω—ã?", reply_markup=markup)
    bot.register_next_step_handler(message, save_visit_frequency)

def save_visit_frequency(message):
    cursor.execute("UPDATE users SET visit_frequency = ? WHERE user_id = ?", (message.text, message.from_user.id))
    conn.commit()
    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –æ–ø—Ä–æ—Å–µ! üòä")
    send_survey_to_admin(message.from_user.id)

@bot.message_handler(commands=['count_clients'])
def count_clients(message):
    cursor.execute("SELECT COUNT(*) FROM users")
    count = cursor.fetchone()[0]
    bot.reply_to(message, f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ: {count}")

bot.polling(non_stop=True)
