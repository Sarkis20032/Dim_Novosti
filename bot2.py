import telebot
from telebot import types
import sqlite3
import os

TOKEN = os.getenv("TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")

bot = telebot.TeleBot(TOKEN)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect('clients.db', check_same_thread=False)
cursor = conn.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
cursor.execute("""
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    username TEXT,
    full_name TEXT,
    likes TEXT,
    dislikes TEXT,
    suggestions TEXT,
    gender TEXT,
    age_group TEXT,
    visit_frequency TEXT
)
""")
conn.commit()

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    username = message.from_user.username
    full_name = f"{message.from_user.first_name} {message.from_user.last_name or ''}"
    
    cursor.execute("SELECT * FROM users WHERE user_id = ?", (user_id,))
    user = cursor.fetchone()
    
    if user:
        bot.reply_to(message, "–í—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –∞–Ω–∫–µ—Ç—É. –°–ø–∞—Å–∏–±–æ!")
    else:
        cursor.execute("INSERT OR IGNORE INTO users (user_id, username, full_name) VALUES (?, ?, ?)", (user_id, username, full_name))
        conn.commit()
        send_intro(message)

# –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
def send_intro(message):
    bot.send_message(message.chat.id, "–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –º–µ–Ω—è –∑–æ–≤—É—Ç –î–∞–≤–∏–¥üëã —è –≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ç–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤ '–î—ã–º'üí®\n–†–∞–¥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—Éüòä\n\n–Ø —Å–æ–∑–¥–∞–ª —ç—Ç–æ–≥–æ –±–æ—Ç–∞, —á—Ç–æ–±—ã –¥–∞—Ç—å —Å–≤–æ–∏–º –≥–æ—Å—Ç—è–º —Å–∞–º—ã–π –ª—É—á—à–∏–π —Å–µ—Ä–≤–∏—Å –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µüòç\n\n–í—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –º—ã —Å—Ç–∞–ª–∏ –ª—É—á—à–µ –¥–ª—è –≤–∞—Å?", reply_markup=generate_yes_no_keyboard())
    bot.register_next_step_handler(message, ask_survey_consent)

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –î–∞/–ù–µ—Ç
def generate_yes_no_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("–î–∞", "–ù–µ—Ç")
    return markup

# –°–ø—Ä–∞—à–∏–≤–∞–µ–º, –≥–æ—Ç–æ–≤ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–º–æ—á—å
def ask_survey_consent(message):
    bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ‚ú®\n–¢—É—Ç —è –±—É–¥—É –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –∏ –ø–æ–¥–∞—Ä–∫–∏ üéÅ\n\n–ù–æ —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ, –º—ã —Ö–æ—Ç–∏–º —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã.\n\n–°–º–æ–∂–µ—Ç–µ –Ω–∞–º –ø–æ–º–æ—á—å, –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ 3 –≤–æ–ø—Ä–æ—Å–∞?", reply_markup=generate_yes_no_keyboard())
    bot.register_next_step_handler(message, ask_likes)

# –í–æ–ø—Ä–æ—Å –æ —Ç–æ–º, —á—Ç–æ —Ü–µ–Ω—è—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ
def ask_likes(message):
    bot.send_message(message.chat.id, "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–º–æ—â—åü§ù\n–ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ 2 –≤–µ—â–∏ –≤ –Ω–∞—à–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö –≤—ã —Ü–µ–Ω–∏—Ç–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?")
    bot.register_next_step_handler(message, save_likes)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ —Ü–µ–Ω–Ω–æ—Å—Ç—è—Ö
def save_likes(message):
    cursor.execute("UPDATE users SET likes = ? WHERE user_id = ?", (message.text, message.from_user.id))
    conn.commit()
    ask_dislikes(message)

# –í–æ–ø—Ä–æ—Å –æ —Ç–æ–º, —á—Ç–æ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è
def ask_dislikes(message):
    bot.send_message(message.chat.id, "–•–æ—Ä–æ—à–æüòä\n–ò –µ—â–µ –ø–∞—Ä—É –≤–µ—â–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è?")
    bot.register_next_step_handler(message, save_dislikes)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞—Ö
def save_dislikes(message):
    cursor.execute("UPDATE users SET dislikes = ? WHERE user_id = ?", (message.text, message.from_user.id))
    conn.commit()
    ask_suggestions(message)

# –í–æ–ø—Ä–æ—Å –æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
def ask_suggestions(message):
    bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å)\n–ß—Ç–æ –±—ã –≤—ã –∏–∑–º–µ–Ω–∏–ª–∏, –±—É–¥—É—á–∏ –Ω–∞ –º–æ–µ–º –º–µ—Å—Ç–µ, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –ª—É—á—à–µ?")
    bot.register_next_step_handler(message, save_suggestions)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
def save_suggestions(message):
    cursor.execute("UPDATE users SET suggestions = ? WHERE user_id = ?", (message.text, message.from_user.id))
    conn.commit()
    ask_additional_info(message)

# –í–æ–ø—Ä–æ—Å –æ –ø–æ–ª–µ, –≤–æ–∑—Ä–∞—Å—Ç–µ –∏ —á–∞—Å—Ç–æ—Ç–µ –ø–æ—Å–µ—â–µ–Ω–∏–π (–≤—Å—ë –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏)
def ask_additional_info(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=3)
    
    gender_btns = [types.KeyboardButton("–ú—É–∂—Å–∫–æ–π"), types.KeyboardButton("–ñ–µ–Ω—Å–∫–∏–π")]
    age_btns = [types.KeyboardButton("–î–æ 22"), types.KeyboardButton("22-30"), types.KeyboardButton("–ë–æ–ª–µ–µ 30")]
    visit_btns = [types.KeyboardButton("–ë—ã–ª –¥–æ 3—Ö —Ä–∞–∑"), types.KeyboardButton("3-8"), types.KeyboardButton("–ë–æ–ª–µ–µ 8 —Ä–∞–∑")]
    
    markup.add(*gender_btns)
    markup.add(*age_btns)
    markup.add(*visit_btns)
    
    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –æ–≥—Ä–æ–º–Ω–æ–µ –∑–∞ –ø–æ–º–æ—â—åüòä\n–Ø —É—á—Ç—É –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏ –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø—Ä–∏–ª–æ–∂–∏—Ç—å —É—Å–∏–ª–∏—è, —á—Ç–æ–±—ã —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å.\n\n–ï—Å–ª–∏ –Ω–µ —Å–ª–æ–∂–Ω–æ, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç –∏ —á–∞—Å—Ç–æ—Ç—É –ø–æ—Å–µ—â–µ–Ω–∏–π, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏:", reply_markup=markup)
    bot.register_next_step_handler(message, save_additional_info)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª–∞, –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ —á–∞—Å—Ç–æ—Ç—ã –ø–æ—Å–µ—â–µ–Ω–∏–π
def save_additional_info(message):
    responses = message.text.split("\n")
    
    if len(responses) == 3:
        gender, age_group, visit_frequency = responses
        cursor.execute("UPDATE users SET gender = ?, age_group = ?, visit_frequency = ? WHERE user_id = ?",
                       (gender, age_group, visit_frequency, message.from_user.id))
        conn.commit()
        send_survey_to_admin(message.from_user.id)
        bot.send_message(message.chat.id, "–ë–ª–∞–≥–æ–¥–∞—Ä—é!\nüìû 8-918-5567-53-33\n–í–æ—Ç –º–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø–æ –Ω–µ–º—É –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ WhatsApp/Telegram.\n\n–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–ª–∏—á–∏–∏, —Ü–µ–Ω–∞—Ö –∏–ª–∏ –≤–∫—É—Å–∞—Ö, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –Ω–∞—à —á–∞—Ç: https://t.me/+BR14rdoGA91mZjdi")
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ —Ç—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ (–ø–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç, —á–∞—Å—Ç–æ—Ç—É –ø–æ—Å–µ—â–µ–Ω–∏–π). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        ask_additional_info(message)

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∫–µ—Ç—ã –∞–¥–º–∏–Ω—É
def send_survey_to_admin(user_id):
    cursor.execute("SELECT full_name, likes, dislikes, suggestions, gender, age_group, visit_frequency FROM users WHERE user_id = ?", (user_id,))
    user_data = cursor.fetchone()
    
    if user_data:
        full_name, likes, dislikes, suggestions, gender, age_group, visit_frequency = user_data
        survey_text = f"–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞:\n\n"
        survey_text += f"–ò–º—è: {full_name}\n"
        survey_text += f"–¶–µ–Ω–∏—Ç: {likes}\n"
        survey_text += f"–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è: {dislikes}\n"
        survey_text += f"–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: {suggestions}\n"
        survey_text += f"–ü–æ–ª: {gender}\n"
        survey_text += f"–í–æ–∑—Ä–∞—Å—Ç: {age_group}\n"
        survey_text += f"–ß–∞—Å—Ç–æ—Ç–∞ –ø–æ—Å–µ—â–µ–Ω–∏–π: {visit_frequency}\n"
        
        bot.send_message(ADMIN_ID, survey_text)
        
# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã
@bot.message_handler(commands=['clear_database'])
def clear_database(message):
    cursor.execute("DELETE FROM users")
    conn.commit()
    bot.reply_to(message, "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–∞–∑—ã
@bot.message_handler(commands=['count_clients'])
def count_clients(message):
    cursor.execute("SELECT COUNT(*) FROM users")
    count = cursor.fetchone()[0]
    bot.reply_to(message, f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤: {count}")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
@bot.message_handler(commands=['broadcast'])
def broadcast(message):
    if str(message.from_user.id) != ADMIN_ID:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:")
    bot.register_next_step_handler(message, perform_broadcast)

def perform_broadcast(message):
    cursor.execute("SELECT user_id FROM users")
    user_ids = cursor.fetchall()
    for user_id in user_ids:
        try:
            bot.send_message(user_id[0], message.text)
        except:
            pass
    bot.reply_to(message, "–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(non_stop=True)
